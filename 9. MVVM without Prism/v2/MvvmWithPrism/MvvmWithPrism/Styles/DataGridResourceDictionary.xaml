<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
  <Style x:Key="DataGridRowStyle1"
         TargetType="{x:Type DataGridRow}">
    <Setter Property="Background"
            Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    <Setter Property="SnapsToDevicePixels"
            Value="true" />
    <Setter Property="Validation.ErrorTemplate"
            Value="{x:Null}" />
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Foreground="Red"
                     Margin="2,0,0,0"
                     Text="!"
                     VerticalAlignment="Center" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Border x:Name="DGR_Border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="True">
            <SelectiveScrollingGrid>
              <SelectiveScrollingGrid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </SelectiveScrollingGrid.ColumnDefinitions>
              <SelectiveScrollingGrid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </SelectiveScrollingGrid.RowDefinitions>
              <DataGridCellsPresenter Grid.Column="1"
                                      ItemsPanel="{TemplateBinding ItemsPanel}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              <DataGridDetailsPresenter Grid.Column="1"
                                        Grid.Row="1"
                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                        Visibility="{TemplateBinding DetailsVisibility}" />
              <DataGridRowHeader Grid.RowSpan="2"
                                 SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                 Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
            </SelectiveScrollingGrid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsNewItem"
               Value="True">
        <Setter Property="Margin"
                Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
      </Trigger>
      <!--<Trigger Property="IsFocused"
               Value="False">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="Black" />
      </Trigger>-->
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="Background"
                Value="{DynamicResource SecBrush2}" />
        <Setter Property="Foreground"
                Value="Black" />
      </Trigger>
      <Trigger Property="IsSelected"
               Value="True">
        <Setter Property="Background"
                Value="{DynamicResource PrimBrush1}" />
        <Setter Property="Foreground"
                Value="white" />
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsSelected"
                     Value="True" />
          <Condition Property="Selector.IsSelectionActive"
                     Value="False" />
        </MultiTrigger.Conditions>
        <Setter Property="Background"
                Value="{DynamicResource SecBrush2}" />
      </MultiTrigger>

    </Style.Triggers>
  </Style>
  <Style x:Key="ColumnHeaderGripperStyle"
         TargetType="{x:Type Thumb}">
    <Setter Property="Width"
            Value="8" />
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="Cursor"
            Value="SizeWE" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Background="{TemplateBinding Background}"
                  Padding="{TemplateBinding Padding}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DataGridColumnHeaderStyle1"
         TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Background"
            Value="{DynamicResource DataGrid.Column.Header.Background}" />
    <Setter Property="FontWeight"
            Value="SemiBold" />
    <Setter Property="Padding"
            Value="5" />
    <Setter Property="MinHeight"
            Value="25" />
    <Setter Property="VerticalContentAlignment"
            Value="Center" />
    <Setter Property="HorizontalContentAlignment"
            Value="Stretch" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
              <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Cursor="Hand" />

                <StackPanel Grid.Column="
                                  1"
                            Orientation="
                                  Vertical"
                            Margin="10,0,0,0">
                  <!--Fill="{DynamicResource DataGrid.Column.Header.Icon.Static}"-->
                  <Path x:Name="SortUpIcon"
                        Data="F1 M320,512z M0,0z M182.6,41.4C170.1,28.9,149.8,28.9,137.3,41.4L9.30000000000001,169.4C0.100000000000012,178.6 -2.59999999999999,192.3 2.40000000000001,204.3 7.40000000000001,216.3 19,224.1 32,224.1L288,224.1C300.9,224.1 312.6,216.3 317.6,204.3 322.6,192.3 319.8,178.6 310.7,169.4L182.7,41.4z"
                        Height="Auto"
                        Margin="0"
                        Fill="{DynamicResource DataGrid.Column.Header.Icon.Static}"
                        Stretch="Uniform"
                        VerticalAlignment="Center"
                        Width="10" />
                  <Path x:Name="SortDownIcon"
                        Data="F1 M320,512z M0,0z M182.6,470.6C170.1,483.1,149.8,483.1,137.3,470.6L9.30000000000001,342.6C0.100000000000012,333.4 -2.59999999999999,319.7 2.40000000000001,307.7 7.40000000000001,295.7 19,287.9 32,287.9L288,287.9C300.9,287.9 312.6,295.7 317.6,307.7 322.6,319.7 319.8,333.4 310.7,342.6L182.7,470.6z"
                        Height="Auto"
                        Margin="0 -15 0 0"
                        Fill="{DynamicResource DataGrid.Column.Header.Icon.Static}"
                        VerticalAlignment="Center"
                        Stretch="Uniform"
                        Width="10" />
                </StackPanel>
              </Grid>
            </Border>
            <Thumb x:Name="PART_LeftHeaderGripper"
                   HorizontalAlignment="Left"
                   Style="{StaticResource ColumnHeaderGripperStyle}" />
            <Thumb x:Name="PART_RightHeaderGripper"
                   HorizontalAlignment="Right"
                   Style="{StaticResource ColumnHeaderGripperStyle}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="SortDirection"
                     Value="Ascending">
              <Setter TargetName="SortDownIcon"
                      Property="Fill"
                      Value="DarkGray" />
            </Trigger>
            <Trigger Property="SortDirection"
                     Value="Descending">
              <Setter TargetName="SortUpIcon"
                      Property="Fill"
                      Value="DarkGray" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
         TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Rectangle x:Name="Border"
                       Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                       SnapsToDevicePixels="True" />
            <Polygon x:Name="Arrow"
                     Fill="Black"
                     HorizontalAlignment="Right"
                     Margin="8,8,3,3"
                     Opacity="0.15"
                     Points="0,10 10,10 10,0"
                     Stretch="Uniform"
                     VerticalAlignment="Bottom" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
              <Setter Property="Stroke"
                      TargetName="Border"
                      Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed"
                     Value="True">
              <Setter Property="Fill"
                      TargetName="Border"
                      Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="False">
              <Setter Property="Visibility"
                      TargetName="Arrow"
                      Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type DataGrid}">
    <!--<Setter Property="AlternatingRowBackground"
            Value="{DynamicResource DataGrid.AlternateRow.Background}" />-->
    <Setter Property="Background"
            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    <Setter Property="AlternatingRowBackground"
            Value="{DynamicResource SecBrush2}" />
    <Setter Property="AlternationCount"
            Value="1" />
    <Setter Property="BorderThickness"
            Value="0" />
    <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
    <Setter Property="GridLinesVisibility"
            Value="Horizontal" />
    <Setter Property="HorizontalGridLinesBrush"
            Value="{DynamicResource DataGrid.Grid.HorizontalLineBrush}" />
    <Setter Property="HeadersVisibility"
            Value="Column" />
    <Setter Property="BorderBrush"
            Value="#FF688CAF" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="RowDetailsVisibilityMode"
            Value="VisibleWhenSelected" />
    <Setter Property="ScrollViewer.CanContentScroll"
            Value="False" />
    <Setter Property="ScrollViewer.PanningMode"
            Value="Both" />
    <Setter Property="SelectionMode"
            Value="Single" />
    <Setter Property="Stylus.IsFlicksEnabled"
            Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border x:Name="gridBorder"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Padding="{TemplateBinding Padding}"
                  SnapsToDevicePixels="True"
                  CornerRadius="2">
            <ScrollViewer x:Name="DG_ScrollViewer"
                          Focusable="false"
                          Margin="{TemplateBinding Padding}">
              <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition Width="*" />
                      <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto" />
                      <RowDefinition Height="*" />
                      <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Button Command="{x:Static DataGrid.SelectAllCommand}"
                            Focusable="false"
                            Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                            Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                    Grid.Column="1"
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                            CanContentScroll="{TemplateBinding CanContentScroll}"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1" />
                    <ScrollBar x:Name="PART_VerticalScrollBar"
                               Grid.Column="2"
                               Maximum="{TemplateBinding ScrollableHeight}"
                               Orientation="Vertical"
                               Grid.Row="1"
                               Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                               ViewportSize="{TemplateBinding ViewportHeight}"
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                    <Grid Grid.Column="1"
                          Grid.Row="2">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <ScrollBar x:Name="PART_HorizontalScrollBar"
                                 Grid.Column="1"
                                 Maximum="{TemplateBinding ScrollableWidth}"
                                 Orientation="Horizontal"
                                 Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </ScrollViewer.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping"
                     Value="true" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                     Value="false" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="false" />
      </MultiTrigger>
      <Trigger Property="IsReadOnly"
               Value="True">
        <Setter Property="Foreground"
                Value="Black" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="DataGridCellStyle1"
         TargetType="{x:Type DataGridCell}">
    <Setter Property="Background"
            Value="Transparent" />
    <Setter Property="BorderThickness"
            Value="0" />
    <!--<Setter Property="IsEnabled"
            Value="False" />-->
    <Setter Property="HorizontalAlignment"
            Value="Stretch" />
    <Setter Property="Margin"
            Value="10 5" />
    <!--<Style.Triggers>-->
      <!--<Trigger Property="IsEnabled"
               Value="False">
        <Setter Property="Foreground"
                Value="Black" />
      </Trigger>-->
      <!--<Trigger Property="IsSelected"
               Value="True">
        <Setter Property="Background"
                Value="{DynamicResource PrimBrush2}" />
        <Setter Property="Foreground"
                Value="white" />
      </Trigger>
      <Trigger Property="IsMouseOver"
               Value="True">
        <Setter Property="Background"
                Value="{DynamicResource SecBrush1}" />
      </Trigger>-->
    <!--</Style.Triggers>-->
  </Style>
</ResourceDictionary>